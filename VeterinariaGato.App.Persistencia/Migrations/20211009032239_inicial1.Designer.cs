// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeterinariaGato.App.Persistencia;

namespace VeterinariaGato.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211009032239_inicial1")]
    partial class inicial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Gato", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnEspañol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnIngles")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EnItaliano")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Enfermera_id")
                        .HasColumnType("int");

                    b.Property<int>("Historia_id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Propietario_id")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SignoVital_id")
                        .HasColumnType("int");

                    b.Property<int>("Veterinario_id")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("Enfermera_id");

                    b.HasIndex("Historia_id");

                    b.HasIndex("Propietario_id");

                    b.HasIndex("SignoVital_id");

                    b.HasIndex("Veterinario_id");

                    b.ToTable("Gatos");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entorno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SugerenciaCuidado_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SugerenciaCuidado_id");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.SignoVital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Signo")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("SignosVitales");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.SugerenciaCuidado", b =>
                {
                    b.Property<int>("SugeCuidadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.HasKey("SugeCuidadoId");

                    b.ToTable("SugerenciaCuidados");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Enfermera", b =>
                {
                    b.HasBaseType("VeterinariaGato.App.Dominio.Persona");

                    b.Property<int>("HorasLaboradas")
                        .HasColumnType("int");

                    b.Property<string>("TarjetaProfecional")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Enfermeras");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("VeterinariaGato.App.Dominio.Persona");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Propietarios");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("VeterinariaGato.App.Dominio.Persona");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Registro")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Veterinarios");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Gato", b =>
                {
                    b.HasOne("VeterinariaGato.App.Dominio.Enfermera", "Enfermera")
                        .WithMany()
                        .HasForeignKey("Enfermera_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinariaGato.App.Dominio.Historia", "Historia")
                        .WithMany()
                        .HasForeignKey("Historia_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinariaGato.App.Dominio.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("Propietario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinariaGato.App.Dominio.SignoVital", "SignoVital")
                        .WithMany()
                        .HasForeignKey("SignoVital_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeterinariaGato.App.Dominio.Veterinario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("Veterinario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enfermera");

                    b.Navigation("Historia");

                    b.Navigation("Propietario");

                    b.Navigation("SignoVital");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Historia", b =>
                {
                    b.HasOne("VeterinariaGato.App.Dominio.SugerenciaCuidado", "SugerenciaCuidado")
                        .WithMany()
                        .HasForeignKey("SugerenciaCuidado_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SugerenciaCuidado");
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Enfermera", b =>
                {
                    b.HasOne("VeterinariaGato.App.Dominio.Persona", null)
                        .WithOne()
                        .HasForeignKey("VeterinariaGato.App.Dominio.Enfermera", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Propietario", b =>
                {
                    b.HasOne("VeterinariaGato.App.Dominio.Persona", null)
                        .WithOne()
                        .HasForeignKey("VeterinariaGato.App.Dominio.Propietario", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VeterinariaGato.App.Dominio.Veterinario", b =>
                {
                    b.HasOne("VeterinariaGato.App.Dominio.Persona", null)
                        .WithOne()
                        .HasForeignKey("VeterinariaGato.App.Dominio.Veterinario", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
